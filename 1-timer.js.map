{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate = null;\nlet timerId = null;\nrefs.startBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      refs.startBtn.disabled = true;\n    } else {\n      iziToast.success({\n        message: 'Lets go?',\n      });\n      refs.startBtn.disabled = false;\n    }\n  },\n};\nflatpickr(refs.input, options);\n\nrefs.startBtn.addEventListener('click', () => {\n  refs.startBtn.disabled = true;\n  refs.input.disabled = true;\n\n  timerId = setInterval(() => {\n    const timeLeft = userSelectedDate - new Date();\n    if (timeLeft <= 0) {\n      clearInterval(timerId);\n      refs.input.disabled = false;\n      updateTimerUI(0);\n      return;\n    }\n    updateTimerUI(timeLeft);\n  }, 1000);\n});\n\nfunction updateTimerUI(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  refs.days.textContent = addLeadingZero(days);\n  refs.hours.textContent = addLeadingZero(hours);\n  refs.minutes.textContent = addLeadingZero(minutes);\n  refs.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor(((ms % day) % hour) / minute),\n    seconds: Math.floor((((ms % day) % hour) % minute) / second),\n  };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst classBtn = document.querySelector('button');\nclassBtn.classList.add('btn');\n"],"names":["refs","userSelectedDate","timerId","options","selectedDates","iziToast","flatpickr","timeLeft","updateTimerUI","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value","classBtn"],"mappings":"+IAKA,MAAMA,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,SAAU,SAAS,cAAc,cAAc,EAC/C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAmB,KACnBC,EAAU,KACdF,EAAK,SAAS,SAAW,GAEzB,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoB,IAAI,MAC1BI,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDL,EAAK,SAAS,SAAW,KAEzBK,EAAS,QAAQ,CACf,QAAS,UACjB,CAAO,EACDL,EAAK,SAAS,SAAW,GAE5B,CACH,EACAM,EAAUN,EAAK,MAAOG,CAAO,EAE7BH,EAAK,SAAS,iBAAiB,QAAS,IAAM,CAC5CA,EAAK,SAAS,SAAW,GACzBA,EAAK,MAAM,SAAW,GAEtBE,EAAU,YAAY,IAAM,CAC1B,MAAMK,EAAWN,EAAmB,IAAI,KACxC,GAAIM,GAAY,EAAG,CACjB,cAAcL,CAAO,EACrBF,EAAK,MAAM,SAAW,GACtBQ,EAAc,CAAC,EACf,MACN,CACIA,EAAcD,CAAQ,CACvB,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAcC,EAAI,CACzB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EAAUL,CAAE,EACtDT,EAAK,KAAK,YAAce,EAAeL,CAAI,EAC3CV,EAAK,MAAM,YAAce,EAAeJ,CAAK,EAC7CX,EAAK,QAAQ,YAAce,EAAeH,CAAO,EACjDZ,EAAK,QAAQ,YAAce,EAAeF,CAAO,CACnD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EAChD,QAAS,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,CAC5D,CACH,CAEA,SAASM,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,MAAMC,EAAW,SAAS,cAAc,QAAQ,EAChDA,EAAS,UAAU,IAAI,KAAK"}